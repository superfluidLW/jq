;
; Jinx.ini
;
; This is an example config file which you should customize.
; For more information see https://exceljava.com.

[JINX]
; classes:
; List of Java classes to load when Excel starts.
; Multiple classes can be listed either as a comma
; delimited list or across multiple indented lines.
; Jars can also specifiy classes to load by including a
; 'jinx-classes.txt' resource file.
classes = com.chendu.jq.excel.TestFunc1


; error_handler:
; Can be set to 'excel' or 'toString'
; When set to 'excel' any exceptions are converted to Excel
; errors (eg #N/A), or when set to 'toString' Java exceptions
; are converted to strings for easier error handling.
error_handler = toString

; developer_mode:
; Enabled by default. If disabled none of the standard built-in menus
; will be shown (e.g. reload).
;developer_mode = 1

; shadow_path:
; An optional path where any jars from the class path will be copied to.
; This is so that the original JARs aren't locked by the JVM and can be
; overwritten before reloading.
; To disable using a shadow path comment out this line.
shadow_path = %(APPDATA)s\Jinx\shadow_jars

; reload_exclude:
; Class to exclude from class reloading.
; Some classes do not reload cleanly and reloading them causes problems.
; For example, if static state is maintained in a native library then
; reloading the Java classes may not work correctly.
reload_exclude =
    com.microsoft.sqlserver.jdbc.*
    microsoft.sql.*
    mssql.*

; reload_include:
; Instead of setting reload_exclude, reload_include can be used to control
; the classes that should be reloaded. When set, everything else will be
; excluded from reloading.
;reload_include =

[JAVA]
; The Java classpath is set as multiple indented lines (one per path) or
; a semi-colon delimited list of paths. '*' may be used as a wildcard.
; Classes and resources may be loaded from both JAR files and directories.
classpath =../jq_core/target/*.jar

; java_home can be set to specify the Java runtime to use.
; If you are using a 64 bit version of Excel you must also use
; a 64 bit Java runtime, or if you are using a 32 bit version of
; Excel then you just use a 32 bit Java runtime.
java_home = C:\Program Files (x86)\Java\jre1.8.0_202

; Java options to be set when Java is initialized
;java_opts =
;    -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
;    -Xms1024m
;    -Xmx4196m

; jni_version can be specified, defaults to 1.6
;jni_version = 1.6


[LOG]
; Level can be 'severe', 'warning', 'info', 'config', 'fine' 'finer' or 'c'
level = finest

; See the documentation for all formatting options
format = %(asctime)s - %(levelname)s : %(message)s

; Path is where any log files will be written to
path = ./logs

; File is the filename of the logfile. See the documentation for all
; possible substituion variables.
file = jinx.%(date)s.log
